version: "3.9"

services:
  jj_db:
    image: postgres:15   # ✅ official amd64 image works on PC
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Asia/Manila                # ✅ Set Manila timezone
      POSTGRES_INITDB_ARGS: "--auth-local=trust --auth-host=trust"
      POSTGRES_LOG_TIMEZONE: Asia/Manila
    ports:
      - "5432:5432"
    volumes:
      - jj_db_data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro   # ✅ Sync host clock
      - /etc/timezone:/etc/timezone:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10

  jjnotificationservice:
    build:
      context: ./JJNotificationService
      dockerfile: Dockerfile
    container_name: jjnotificationservice
    restart: always
    depends_on:
      jj_db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DB_HOST: jj_db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      ENV: docker
      TZ: Asia/Manila                 # ✅ Set Manila timezone
    ports:
      - "8000:8000"
    volumes:
      - ./JJNotificationService:/app
      - /etc/localtime:/etc/localtime:ro   # ✅ Sync host clock
      - /etc/timezone:/etc/timezone:ro
    entrypoint: ["/entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  jj_pgadmin:
    image: dpage/pgadmin4   # ✅ official pgAdmin for amd64
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      TZ: Asia/Manila                 # ✅ Set Manila timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro   # ✅ Sync host clock
      - /etc/timezone:/etc/timezone:ro
    ports:
      - "5050:80"
    depends_on:
      - jj_db

  jjnotificationapp:
    build:
      context: ./JJNotificationApp
      dockerfile: Dockerfile
    container_name: jjnotificationapp
    restart: always
    depends_on:
      - jjnotificationservice
    ports:
      - "80:80"
    volumes:
      - ./JJNotificationApp/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  jj_db_data:
